#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        lg_space: lg_space {
            compatible = "zmk,behavior-mod-morph";
            label = "LG_SPACE";
            bindings = <&kp SPACE>, <&lg_tog>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <15 16>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <15 16>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(NUMBER_1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        lg_tog: lg_tog {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &tog 1>;
            label = "LG_TOG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp F1          &kp F2  &kp F3    &kp F4     &kp F5        &kp F6                           &kp F7  &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&kp TAB         &kp Q   &kp W     &kp E      &kp R         &kp T                            &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSLH
&kp LEFT_SHIFT  &kp A   &kp S     &kp D      &kp F         &kp G                            &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X     &kp C      &kp V         &kp B   &kp K_MUTE    &kp RBKT   &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                        &kp LGUI  &kp GRAVE  &kp LEFT_ALT  &mo 2   &kp SPACE     &kp ENTER  &mo 3   &kp RCTRL  &kp RALT   &kp RGUI
            >;

            display-name = "Base";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp F1          &kp F2                   &kp F3                &kp F4              &kp F5              &kp F6                                                       &kp F7              &kp F8                     &kp F9               &kp F10                &kp F11              &kp F12
&kp TAB         &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                                           &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp LEFT_SHIFT  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                           &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LCTRL       &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I   &kp K_MUTE    &kp RU_CYRILLIC_HARD_SIGN  &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp RU_DOT           &kp RU_CYRILLIC_HARD_SIGN
                                         &kp LGUI              &kp GRAVE           &kp LEFT_ALT        &mo 2               &kp SPACE     &kp ENTER                  &mo 4               &kp RCTRL                  &kp RALT             &kp RGUI
            >;

            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        nav {
            bindings = <
&kp ESC           &kp NUMBER_1       &kp NUMBER_2        &kp NUMBER_3        &kp NUMBER_4         &kp NUMBER_5                                           &kp NUMBER_6              &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp K_CALCULATOR
&kp LC(UP_ARROW)  &kp BACKSPACE      &kp LA(LEFT_ARROW)  &kp UP              &kp LA(RIGHT_ARROW)  &trans                                                 &kp PG_UP                 &kp N7         &kp N8        &kp N9        &trans        &kp CAPSLOCK
&layer_ru         &kp LA(BACKSPACE)  &kp LEFT            &kp DOWN            &kp RIGHT            &kp RET                                                &kp PG_DN                 &kp N4         &kp N5        &kp N6        &trans        &trans
&layer_en         &kp LG(BACKSPACE)  &kp LC(LEFT)        &kp LA(UP_ARROW)    &kp LC(RIGHT)        &kp DEL       &kp LS(LC(LG(NUMBER_4)))    &trans       &kp LC(LG(LS(NUMBER_4)))  &kp N1         &kp N2        &kp N3        &trans        &trans
                                     &trans              &kp LA(DOWN_ARROW)  &kp LC(LEFT)         &trans        &kp LC(RIGHT_ARROW)         &kp PAGE_UP  &mo 5                     &kp PAGE_DOWN  &kp N0        &trans
            >;

            display-name = "Navigation";
        };

        sym_en {
            bindings = <
&trans    &trans     &trans         &kp CARET       &trans    &trans                              &trans             &trans       &kp AT_SIGN  &trans    &trans    &trans
&trans    &trans     &kp LT         &kp EQUAL       &kp GT    &kp SINGLE_QUOTE                    &kp DOUBLE_QUOTES  &kp LBKT     &kp ASTRK    &kp RBKT  &trans    &trans
&kp EXCL  &kp COLON  &kp LPAR       &kp MINUS       &kp RPAR  &kp AMPERSAND                       &kp PRCNT          &kp LBRC     &kp PLUS     &kp RBRC  &kp SEMI  &kp QUESTION
&trans    &trans     &kp BACKSLASH  &kp UNDERSCORE  &kp FSLH  &kp PIPE          &trans    &trans  &kp HASH           &kp PERCENT  &kp COMMA    &kp DOT   &trans    &trans
                     &trans         &trans          &trans    &mo 5             &trans    &trans  &trans             &trans       &trans       &trans
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans           &trans     &trans         &en CARET       &trans       &trans                           &trans             &trans    &en AT_SIGN  &trans    &trans       &trans
&trans           &trans     &en LT         &kp EQUAL       &en GT       &en GRAVE                        &en DOUBLE_QUOTES  &en LBKT  &kp ASTRK    &en RBKT  &trans       &trans
&kp EXCLAMATION  &en COLON  &kp LPAR       &kp MINUS       &kp RPAR     &kp AMPERSAND                    &kp DOLLAR         &en LBRC  &kp PLUS     &en RBRC  &en RU_SEMI  &en RU_QUESTION
&trans           &trans     &en BACKSLASH  &kp UNDERSCORE  &en RU_FSLH  &kp PIPE       &trans    &trans  &en PERCENT        &en HASH  &en COMMA    &en DOT   &trans       &trans
                            &trans         &trans          &trans       &mo 5          &trans    &trans  &trans             &trans    &trans       &trans
            >;
        };

        adj {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &studio_unlock
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };
    };
};
